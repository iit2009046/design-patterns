Object pooling can offer a significant performance boost; it is most effective in situations where the cost of initializing a class instance is high,
the rate of instantiation of a class is high, and the number of instantiations in use at any one time is low.

Object pools (otherwise known as resource pools) are used to manage the object caching. A client with access to a Object pool can avoid creating a new
Objects by simply asking the pool for one that has already been instantiated instead. Generally the pool will be a growing pool, i.e.
the pool itself will create new objects if the pool is empty, or we can have a pool, which restricts the number of objects created.

Example: Database connection pooling


