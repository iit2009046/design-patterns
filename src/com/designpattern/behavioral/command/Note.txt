Definition: The command pattern encapsulates a request as an object, thereby letting us parameterize other objects
with different requests, queue or log requests, and support undoable operations.

The definition is a bit confusing at first but let’s step through it. In analogy to our problem above remote
control is the client and stereo, lights etc. are the receivers. In command pattern there is a Command object that encapsulates a
request by binding together a set of actions on a specific receiver. It does so by exposing just one method execute() that causes some
actions to be invoked on the receiver.


Parameterizing other objects with different requests in our analogy means that the button used to turn on the lights can later
be used to turn on stereo or maybe open the garage door.

queue or log requests, and support undoable operations means that Command’s Execute operation can store state for reversing
its effects in the Command itself. The Command may have an added unExecute operation that reverses the effects of a previous
call to execute.It may also support logging changes so that they can be reapplied in case of a system crash.

Java libraries examples:

All implementations of java.lang.Runnable
All implementations of javax.swing.Action